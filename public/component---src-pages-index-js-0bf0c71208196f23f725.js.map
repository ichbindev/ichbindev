{"version":3,"sources":["webpack:///./src/components/TitleAndDescription.js","webpack:///./src/components/Header.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TitleAndDescription","data","title","site","siteMetadata","description","style","display","flexDirection","alignItems","fontFamily","marginBottom","marginTop","opacity","Header","query","render","Layout","edges","allMarkdownRemark","map","edge","frontmatter","node","key","path","to","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"gUAwBeA,EAtBa,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACtBC,EAAQD,EAAKE,KAAKC,aAAaF,MAC/BG,EAAcJ,EAAKE,KAAKC,aAAaC,YAE3C,OACE,yBAAKC,MAAO,CACVC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,WAAY,WAEZ,wBAAIJ,MAAO,CAACK,aAAc,IAAKT,GAC/B,uBAAGI,MAAO,CACRM,UAAW,EACXC,QAAS,KAERR,KCGMS,EAlBA,WACb,OACE,kBAAC,IAAD,CACEC,MAAK,aAULC,OAAQ,SAACf,GAAD,OAAU,kBAAC,EAAD,CAAqBA,KAAMA,KAX/C,UC+BSc,EAAK,aAgBHE,UAhDA,SAAC,GAAc,IACpBC,EADmB,EAAXjB,KACOkB,kBAAfD,MACR,OACE,6BACE,kBAAC,EAAD,MACA,yBACEZ,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,WAAY,WAGbQ,EAAME,KAAI,SAACC,GAAU,IACZC,EAAgBD,EAAKE,KAArBD,YACR,OACE,yBAAKE,IAAKF,EAAYG,KAAMnB,MAAO,CAAEK,aAAc,SACjD,kBAAC,IAAD,CAAMe,GAAIJ,EAAYG,MACnBH,EAAYpB,YAOvB,6BACE,kBAAC,IAAD,CAAMwB,GAAG,SAAT,mB,kCC9BR,kJAeyBC,QAAOC,QAfhC,IAiBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBhC,EAAuB,EAAvBA,KAAMc,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDkB,EAAYjC,EACdA,EAAKA,KACLgC,EAAgBlB,IAAUkB,EAAgBlB,GAAOd,KAErD,OACE,kBAAC,IAAMkC,SAAP,KACGD,GAAalB,EAAOkB,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBpC,EAAkCoC,EAAlCpC,KAAMc,EAA4BsB,EAA5BtB,MAAOC,EAAqBqB,EAArBrB,OAAQsB,EAAaD,EAAbC,SAE7B,OACE,kBAACT,EAAmBU,SAApB,MACG,SAAAN,GAAe,OACd,kBAACD,EAAD,CACE/B,KAAMA,EACNc,MAAOA,EACPC,OAAQA,GAAUsB,EAClBL,gBAAiBA,S,qBC1C3B,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,kCCA/C,4CAsBeK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEjB,IAAMkB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-0bf0c71208196f23f725.js","sourcesContent":["import React from 'react';\n\nconst TitleAndDescription = ({data}) => {\n  const title = data.site.siteMetadata.title;\n  const description = data.site.siteMetadata.description;\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      fontFamily: 'avenir'\n    }}>\n      <h2 style={{marginBottom: 0}}>{title}</h2>\n      <p style={{\n        marginTop: 0,\n        opacity: 0.5\n      }}>\n        {description}\n      </p>\n    </div>\n  )\n};\n\nexport default TitleAndDescription;","import React from 'react';\nimport { StaticQuery, graphql } from \"gatsby\";\nimport TitleAndDescription from \"./TitleAndDescription\";\nconst Header = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n        }\n      `}\n      render={(data) => <TitleAndDescription data={data} />}\n    />\n  );\n};\n\nexport default Header;","import React from \"react\";\nimport Header from \"../components/Header\";\nimport { graphql, Link } from \"gatsby\";\n\nconst Layout = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <div>\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          fontFamily: \"avenir\",\n        }}\n      >\n        {edges.map((edge) => {\n          const { frontmatter } = edge.node;\n          return (\n            <div key={frontmatter.path} style={{ marginBottom: \"1rem\" }}>\n              <Link to={frontmatter.path}>\n                {frontmatter.title}\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n\n      <div>\n        <Link to=\"/tags\">Browse Tags</Link>\n      </div>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query HomepageQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport { useScrollRestoration } from \"gatsby-react-router-scroll\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  useScrollRestoration,\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}